import java.io.*;
import java.util.*;

public class LexiBFS {
    public static void main(String[] args) throws IOException {
        FastReader fr = new FastReader();
        int N = fr.nextInt(), M = fr.nextInt(), S = fr.nextInt(), D = fr.nextInt();
        int[] U = new int[M], V = new int[M];
        for (int i = 0; i < M; i++) U[i] = fr.nextInt();
        for (int i = 0; i < M; i++) V[i] = fr.nextInt();

        if (S == D) { System.out.println(0); System.out.println(S); return; }
        int[] deg = new int[N + 1];
        for (int i = 0; i < M; i++) { deg[U[i]]++; deg[V[i]]++; }
        int[] start = new int[N + 2];
        for (int u = 1; u <= N; u++) start[u + 1] = start[u] + deg[u];
        int[] to = new int[2 * M], ptr = Arrays.copyOf(start, N + 2);
        for (int i = 0; i < M; i++) {
            to[ptr[U[i]]++] = V[i];
            to[ptr[V[i]]++] = U[i];
        }
        for (int u = 1; u <= N; u++) Arrays.sort(to, start[u], start[u + 1]);

        int[] dist = new int[N + 1], par = new int[N + 1];
        Arrays.fill(dist, -1); Arrays.fill(par, -1);
        int[] q = new int[N]; int qs = 0, qe = 0;
        dist[S] = 0; q[qe++] = S;
        while (qs < qe) {
            int u = q[qs++]; if (u == D) break;
            for (int i = start[u]; i < start[u + 1]; i++) {
                int v = to[i]; if (dist[v] == -1) {
                    dist[v] = dist[u] + 1; par[v] = u; q[qe++] = v;
                }
            }
        }
        if (dist[D] == -1) { System.out.println(-1); return; }
        int len = dist[D]; int[] path = new int[len + 1];
        for (int i = len, v = D; v != -1; v = par[v]) path[i--] = v;
        System.out.println(len);
        StringBuilder sb = new StringBuilder();
        for (int x : path) sb.append(x).append(' ');
        System.out.println(sb.toString().trim());
    }
    static class FastReader {  private final DataInputStream in = new DataInputStream(System.in);
        private final byte[] buf = new byte[1 << 16]; int ptr = 0, len = 0;
        private int read() throws IOException {
            if (ptr >= len) { ptr = 0; len = in.read(buf); if (len == -1) return -1; }
            return buf[ptr++] & 0xFF; }
}
